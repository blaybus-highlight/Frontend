name: Deploy to AWS EC2

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: ap-northeast-2

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10
        run_install: false

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - name: Setup pnpm cache
      uses: actions/cache@v4
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Build application
      run: pnpm build

    - name: Build Docker image
      run: |
        docker build -t nafal-frontend:${{ github.sha }} .
        docker save nafal-frontend:${{ github.sha }} | gzip > nafal-frontend.tar.gz

    - name: Deploy to EC2
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "nafal-frontend.tar.gz"
        target: "/tmp/"

    - name: Deploy and run on EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # Docker 이미지 로드
          docker load < /tmp/nafal-frontend.tar.gz
          
          # 기존 컨테이너 중지 및 제거
          docker stop nafal-frontend || true
          docker rm nafal-frontend || true
          
          # 새 컨테이너 실행
          docker run -d \
            --name nafal-frontend \
            --restart unless-stopped \
            -p 3000:3000 \
            -e NODE_ENV=production \
            nafal-frontend:${{ github.sha }}
          
          # 사용하지 않는 이미지 정리
          docker image prune -f
          
          # 임시 파일 삭제
          rm -f /tmp/nafal-frontend.tar.gz
